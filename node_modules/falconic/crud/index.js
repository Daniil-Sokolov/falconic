'use strict';

const none = {_id: 'None', name: 'None', age: 'None'};
// READ

const find = (model, callback)=> {
	model.find({}, (err, docs)=> {
		if(err) throw err;
		callback(docs);
	});
}

const findOne = (model, par, callback)=>{
	if(!par) callback(none);
	//const user = querystring.parse(par);
	model.findOne({_id: par}, (err, docs)=> {
		if(err) throw err;
		callback(docs);
	});
}

//CREATE

const add = (model, data, callback)=>{
	model.insert(data, (err, newDoc)=> {
		if(err) throw err;
		callback(newDoc)
	});
}

// UPDATE

const update = (model, par, callback)=>{
	if(!par) callback(none);
	//const user = querystring.parse(par);
	model.findOne({_id: par}, (err, docs)=> {
		if(err) throw err;
		callback(docs);
	});
}

const patch = (model, id, data, callback)=>{
	model.update({ _id: id }, { $set: data }, {}, function (err, numReplaced) {
		if(err) throw err;
		callback(numReplaced);
	});
}

// DELETE

const remover = (model, par, callback)=>{
	if(!par) callback(none);
	model.remove({ _id: par }, {}, function (err, numRemoved) {
		if(err) throw err;
		callback(par)
	});
	
}

// EXPORT

module.exports = {
	find,
	findOne,
	add,
	update,
	patch,
	remover,
};