'use strict';

const http = require('http');
const WebSocket = require('ws');
const fullServe = require('./lib/fullServe');

const BASE_PORT = 3000;
const pid = process.pid;
const id = parseInt(process.argv[2], 10);
const port = BASE_PORT + id - 1;

console.log(process.argv[2]);
console.log(`Worker: ${id}, pid: ${pid}, port: ${port}`);

const server = http.createServer((req, res) => {
  fullServe(req, res);
}).listen(port, '0.0.0.0');


const ws = new WebSocket.Server({ server: server });

ws.on('connection', (connection, req) => {
  const ip = req.socket.remoteAddress;
  //console.log(`Connected ${ip}`);
  connection.on('message', (message) => {
    //console.log('Received: ' + message);
    for (const client of ws.clients) {
      if (client.readyState !== WebSocket.OPEN) continue;
      if (client === connection) continue;
      client.send(message, { binary: false });
    }
  });
  connection.on('close', () => {
    //console.log(`Disconnected ${ip}`);
  });
});
